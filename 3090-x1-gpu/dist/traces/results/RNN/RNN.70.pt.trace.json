[{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: MeanBackward0","pid":7,"tid":193,"ts":1677891893846008,"dur":254},{"ph":"X","cat":"cpu_op","name":"MeanBackward0","pid":7,"tid":193,"ts":1677891893846037,"dur":215},{"ph":"X","cat":"cpu_op","name":"aten::expand","pid":7,"tid":193,"ts":1677891893846047,"dur":46},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893846074,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::div","pid":7,"tid":193,"ts":1677891893846098,"dur":151},{"ph":"X","cat":"cpu_op","name":"aten::div","pid":7,"tid":193,"ts":1677891893846114,"dur":131},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846184,"dur":56},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: DivBackward0","pid":7,"tid":193,"ts":1677891893846275,"dur":68},{"ph":"X","cat":"cpu_op","name":"DivBackward0","pid":7,"tid":193,"ts":1677891893846277,"dur":42},{"ph":"X","cat":"cpu_op","name":"aten::div","pid":7,"tid":193,"ts":1677891893846283,"dur":35},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846301,"dur":14},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: CtcLossBackward0","pid":7,"tid":193,"ts":1677891893846351,"dur":784},{"ph":"X","cat":"cpu_op","name":"CtcLossBackward0","pid":7,"tid":193,"ts":1677891893846354,"dur":771},{"ph":"X","cat":"cpu_op","name":"aten::_ctc_loss_backward","pid":7,"tid":193,"ts":1677891893846364,"dur":760},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846395,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846405,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":7,"tid":193,"ts":1677891893846411,"dur":102},{"ph":"X","cat":"cpu_op","name":"aten::_to_copy","pid":7,"tid":193,"ts":1677891893846417,"dur":95},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":7,"tid":193,"ts":1677891893846422,"dur":11},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":7,"tid":193,"ts":1677891893846437,"dur":74},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":7,"tid":193,"ts":1677891893846449,"dur":41},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":7,"tid":193,"ts":1677891893846491,"dur":16},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846516,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":7,"tid":193,"ts":1677891893846519,"dur":38},{"ph":"X","cat":"cpu_op","name":"aten::_to_copy","pid":7,"tid":193,"ts":1677891893846520,"dur":36},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":7,"tid":193,"ts":1677891893846521,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":7,"tid":193,"ts":1677891893846530,"dur":25},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":7,"tid":193,"ts":1677891893846535,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":7,"tid":193,"ts":1677891893846548,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":7,"tid":193,"ts":1677891893846560,"dur":33},{"ph":"X","cat":"cpu_op","name":"aten::_to_copy","pid":7,"tid":193,"ts":1677891893846562,"dur":30},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":7,"tid":193,"ts":1677891893846564,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":7,"tid":193,"ts":1677891893846572,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":7,"tid":193,"ts":1677891893846576,"dur":7},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":7,"tid":193,"ts":1677891893846585,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":7,"tid":193,"ts":1677891893846597,"dur":15},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846600,"dur":11},{"ph":"X","cat":"cpu_op","name":"aten::fill_","pid":7,"tid":193,"ts":1677891893846615,"dur":31},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846626,"dur":16},{"ph":"X","cat":"cpu_op","name":"aten::full_like","pid":7,"tid":193,"ts":1677891893846650,"dur":32},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":7,"tid":193,"ts":1677891893846652,"dur":11},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846653,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::fill_","pid":7,"tid":193,"ts":1677891893846664,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846669,"dur":9},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846686,"dur":17},{"ph":"X","cat":"cpu_op","name":"aten::exp","pid":7,"tid":193,"ts":1677891893846708,"dur":30},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846723,"dur":13},{"ph":"X","cat":"cpu_op","name":"aten::narrow","pid":7,"tid":193,"ts":1677891893846742,"dur":11},{"ph":"X","cat":"cpu_op","name":"aten::slice","pid":7,"tid":193,"ts":1677891893846746,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893846749,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893846754,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893846756,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::add","pid":7,"tid":193,"ts":1677891893846760,"dur":27},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846778,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::logsumexp","pid":7,"tid":193,"ts":1677891893846791,"dur":227},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846792,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::logsumexp","pid":7,"tid":193,"ts":1677891893846797,"dur":220},{"ph":"X","cat":"cpu_op","name":"aten::amax","pid":7,"tid":193,"ts":1677891893846800,"dur":31},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846819,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::abs","pid":7,"tid":193,"ts":1677891893846834,"dur":33},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891893846835,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::abs","pid":7,"tid":193,"ts":1677891893846840,"dur":26},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":7,"tid":193,"ts":1677891893846845,"dur":7},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846857,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::eq","pid":7,"tid":193,"ts":1677891893846869,"dur":26},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846885,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill_","pid":7,"tid":193,"ts":1677891893846897,"dur":21},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846909,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::sub","pid":7,"tid":193,"ts":1677891893846923,"dur":15},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846932,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::exp_","pid":7,"tid":193,"ts":1677891893846941,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846946,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::sum","pid":7,"tid":193,"ts":1677891893846955,"dur":25},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":7,"tid":193,"ts":1677891893846958,"dur":3},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846970,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::log_","pid":7,"tid":193,"ts":1677891893846984,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893846991,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":7,"tid":193,"ts":1677891893847003,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847008,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::permute","pid":7,"tid":193,"ts":1677891893847020,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893847022,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":7,"tid":193,"ts":1677891893847026,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":7,"tid":193,"ts":1677891893847028,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847033,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::narrow","pid":7,"tid":193,"ts":1677891893847040,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::slice","pid":7,"tid":193,"ts":1677891893847041,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893847042,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::sub_","pid":7,"tid":193,"ts":1677891893847045,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847049,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::exp_","pid":7,"tid":193,"ts":1677891893847057,"dur":9},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847060,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::sub_","pid":7,"tid":193,"ts":1677891893847067,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847071,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":7,"tid":193,"ts":1677891893847080,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::mul_","pid":7,"tid":193,"ts":1677891893847082,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847092,"dur":8},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847105,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847113,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: TransposeBackward0","pid":7,"tid":193,"ts":1677891893847144,"dur":15},{"ph":"X","cat":"cpu_op","name":"TransposeBackward0","pid":7,"tid":193,"ts":1677891893847146,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":7,"tid":193,"ts":1677891893847149,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893847153,"dur":1},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: TransposeBackward0","pid":7,"tid":193,"ts":1677891893847162,"dur":9},{"ph":"X","cat":"cpu_op","name":"TransposeBackward0","pid":7,"tid":193,"ts":1677891893847164,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":7,"tid":193,"ts":1677891893847165,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891893847166,"dur":0},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: LogSoftmaxBackward0","pid":7,"tid":193,"ts":1677891893847175,"dur":37},{"ph":"X","cat":"cpu_op","name":"LogSoftmaxBackward0","pid":7,"tid":193,"ts":1677891893847176,"dur":32},{"ph":"X","cat":"cpu_op","name":"aten::_log_softmax_backward_data","pid":7,"tid":193,"ts":1677891893847181,"dur":26},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891893847195,"dur":10},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893846238,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::DivFunctor<float> >, at::detail::Array<char*, 3> >(int, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::DivFunctor<float> >, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1677891893846316,"dur":2},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy HtoD (Pageable -> Device)","pid":0,"tid":7,"ts":1677891893846491,"dur":0},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy HtoD (Pageable -> Device)","pid":0,"tid":7,"ts":1677891893846550,"dur":0},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy HtoD (Pageable -> Device)","pid":0,"tid":7,"ts":1677891893846587,"dur":0},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)","pid":0,"tid":7,"ts":1677891893846643,"dur":147},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)","pid":0,"tid":7,"ts":1677891893846791,"dur":9},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::ctc_loss_backward_log_beta_gpu_kernel<float, long>(float*, float const*, long const*, long, long const*, long const*, long, long, long, long, long, long, long, long const*, long, long, long)","pid":0,"tid":7,"ts":1677891893846801,"dur":563},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677891893847365,"dur":16},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893847383,"dur":375},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4>)","pid":0,"tid":7,"ts":1677891893847759,"dur":82},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, at::detail::Array<char*, 2> >(int, at::native::AbsFunctor<float>, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677891893847843,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, at::detail::Array<char*, 2> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677891893847847,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1677891893847850,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893847853,"dur":153},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677891893848007,"dur":155},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4>)","pid":0,"tid":7,"ts":1677891893848164,"dur":83},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::log_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::log_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677891893848248,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1677891893848252,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893848256,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893848260,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677891893848266,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893848269,"dur":6},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891893848276,"dur":14},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::ctc_loss_backward_collect_nonblank_gpu_kernel<float, long>(float*, float const*, long, float const*, float const*, float const*, long const*, long const*, long const*, float const*, long, long, long, long, long, long, long, long, long, long, long, long, long const*, long, long, bool)","pid":0,"tid":7,"ts":1677891893848291,"dur":351},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::ctc_loss_zero_padded_gradients<float>(float*, long const*, long, long, long, long, long, long)","pid":0,"tid":7,"ts":1677891893848644,"dur":29},{"ph":"X","cat":"kernel","name":"void (anonymous namespace)::softmax_warp_backward<float, float, float, 5, true, false>(float*, float const*, float const*, int, int, int, bool const*)","pid":0,"tid":7,"ts":1677891893848674,"dur":23}]