[{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: MeanBackward0","pid":14570,"tid":14756,"ts":1685410791420744,"dur":273},{"ph":"X","cat":"cpu_op","name":"MeanBackward0","pid":14570,"tid":14756,"ts":1685410791420775,"dur":231},{"ph":"X","cat":"cpu_op","name":"aten::expand","pid":14570,"tid":14756,"ts":1685410791420785,"dur":34},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791420799,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::div","pid":14570,"tid":14756,"ts":1685410791420823,"dur":180},{"ph":"X","cat":"cpu_op","name":"aten::div","pid":14570,"tid":14756,"ts":1685410791420840,"dur":158},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791420932,"dur":61},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: DivBackward0","pid":14570,"tid":14756,"ts":1685410791421030,"dur":75},{"ph":"X","cat":"cpu_op","name":"DivBackward0","pid":14570,"tid":14756,"ts":1685410791421034,"dur":47},{"ph":"X","cat":"cpu_op","name":"aten::div","pid":14570,"tid":14756,"ts":1685410791421040,"dur":40},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421062,"dur":15},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: CtcLossBackward0","pid":14570,"tid":14756,"ts":1685410791421114,"dur":645},{"ph":"X","cat":"cpu_op","name":"CtcLossBackward0","pid":14570,"tid":14756,"ts":1685410791421116,"dur":635},{"ph":"X","cat":"cpu_op","name":"aten::_ctc_loss_backward","pid":14570,"tid":14756,"ts":1685410791421126,"dur":624},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421150,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421158,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":14570,"tid":14756,"ts":1685410791421161,"dur":74},{"ph":"X","cat":"cpu_op","name":"aten::_to_copy","pid":14570,"tid":14756,"ts":1685410791421166,"dur":69},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":14570,"tid":14756,"ts":1685410791421171,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":14570,"tid":14756,"ts":1685410791421180,"dur":54},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":14570,"tid":14756,"ts":1685410791421189,"dur":29},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":14570,"tid":14756,"ts":1685410791421220,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421237,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":14570,"tid":14756,"ts":1685410791421238,"dur":22},{"ph":"X","cat":"cpu_op","name":"aten::_to_copy","pid":14570,"tid":14756,"ts":1685410791421239,"dur":21},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":14570,"tid":14756,"ts":1685410791421240,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":14570,"tid":14756,"ts":1685410791421245,"dur":15},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":14570,"tid":14756,"ts":1685410791421247,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":14570,"tid":14756,"ts":1685410791421254,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":14570,"tid":14756,"ts":1685410791421262,"dur":21},{"ph":"X","cat":"cpu_op","name":"aten::_to_copy","pid":14570,"tid":14756,"ts":1685410791421263,"dur":20},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":14570,"tid":14756,"ts":1685410791421264,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":14570,"tid":14756,"ts":1685410791421269,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":14570,"tid":14756,"ts":1685410791421272,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":14570,"tid":14756,"ts":1685410791421277,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":14570,"tid":14756,"ts":1685410791421286,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421289,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::fill_","pid":14570,"tid":14756,"ts":1685410791421300,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421307,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::full_like","pid":14570,"tid":14756,"ts":1685410791421323,"dur":17},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":14570,"tid":14756,"ts":1685410791421324,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421324,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::fill_","pid":14570,"tid":14756,"ts":1685410791421330,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421333,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421343,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::exp","pid":14570,"tid":14756,"ts":1685410791421355,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421365,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::narrow","pid":14570,"tid":14756,"ts":1685410791421378,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::slice","pid":14570,"tid":14756,"ts":1685410791421381,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421383,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421387,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421388,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::add","pid":14570,"tid":14756,"ts":1685410791421391,"dur":28},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421409,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::logsumexp","pid":14570,"tid":14756,"ts":1685410791421422,"dur":220},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421423,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::logsumexp","pid":14570,"tid":14756,"ts":1685410791421429,"dur":213},{"ph":"X","cat":"cpu_op","name":"aten::amax","pid":14570,"tid":14756,"ts":1685410791421431,"dur":30},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421450,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::abs","pid":14570,"tid":14756,"ts":1685410791421463,"dur":35},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410791421464,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::abs","pid":14570,"tid":14756,"ts":1685410791421470,"dur":28},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":14570,"tid":14756,"ts":1685410791421475,"dur":7},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421487,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::eq","pid":14570,"tid":14756,"ts":1685410791421500,"dur":24},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421515,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill_","pid":14570,"tid":14756,"ts":1685410791421527,"dur":19},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421536,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::sub","pid":14570,"tid":14756,"ts":1685410791421550,"dur":15},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421559,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::exp_","pid":14570,"tid":14756,"ts":1685410791421567,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421572,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::sum","pid":14570,"tid":14756,"ts":1685410791421580,"dur":26},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":14570,"tid":14756,"ts":1685410791421583,"dur":3},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421594,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::log_","pid":14570,"tid":14756,"ts":1685410791421610,"dur":16},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421616,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14756,"ts":1685410791421628,"dur":12},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421632,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::permute","pid":14570,"tid":14756,"ts":1685410791421644,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421646,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":14570,"tid":14756,"ts":1685410791421650,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14756,"ts":1685410791421653,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421657,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::narrow","pid":14570,"tid":14756,"ts":1685410791421664,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::slice","pid":14570,"tid":14756,"ts":1685410791421665,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421666,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::sub_","pid":14570,"tid":14756,"ts":1685410791421669,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421673,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::exp_","pid":14570,"tid":14756,"ts":1685410791421680,"dur":9},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421683,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::sub_","pid":14570,"tid":14756,"ts":1685410791421690,"dur":9},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421693,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":14570,"tid":14756,"ts":1685410791421703,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::mul_","pid":14570,"tid":14756,"ts":1685410791421705,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421715,"dur":8},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421727,"dur":8},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421737,"dur":7},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: TransposeBackward0","pid":14570,"tid":14756,"ts":1685410791421768,"dur":15},{"ph":"X","cat":"cpu_op","name":"TransposeBackward0","pid":14570,"tid":14756,"ts":1685410791421769,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":14570,"tid":14756,"ts":1685410791421772,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421777,"dur":1},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: TransposeBackward0","pid":14570,"tid":14756,"ts":1685410791421786,"dur":8},{"ph":"X","cat":"cpu_op","name":"TransposeBackward0","pid":14570,"tid":14756,"ts":1685410791421788,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":14570,"tid":14756,"ts":1685410791421788,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14756,"ts":1685410791421789,"dur":1},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: LogSoftmaxBackward0","pid":14570,"tid":14756,"ts":1685410791421798,"dur":37},{"ph":"X","cat":"cpu_op","name":"LogSoftmaxBackward0","pid":14570,"tid":14756,"ts":1685410791421799,"dur":32},{"ph":"X","cat":"cpu_op","name":"aten::_log_softmax_backward_data","pid":14570,"tid":14756,"ts":1685410791421804,"dur":27},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410791421818,"dur":11},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BUnaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791420990,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::DivFunctor<float> >, at::detail::Array<char*, 3> >(int, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::DivFunctor<float> >, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410791421075,"dur":2},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy HtoD (Pageable -> Device)","pid":0,"tid":7,"ts":1685410791421219,"dur":0},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy HtoD (Pageable -> Device)","pid":0,"tid":7,"ts":1685410791421256,"dur":0},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy HtoD (Pageable -> Device)","pid":0,"tid":7,"ts":1685410791421279,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)","pid":0,"tid":7,"ts":1685410791421318,"dur":146},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<float>, at::detail::Array<char*, 1>)","pid":0,"tid":7,"ts":1685410791421466,"dur":9},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::ctc_loss_backward_log_beta_gpu_kernel<float, long>(float*, float const*, long const*, long, long const*, long const*, long, long, long, long, long, long, long, long const*, long, long, long)","pid":0,"tid":7,"ts":1685410791421476,"dur":569},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791422046,"dur":16},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791422064,"dur":375},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4>)","pid":0,"tid":7,"ts":1685410791422440,"dur":82},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, at::detail::Array<char*, 2> >(int, at::native::AbsFunctor<float>, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791422524,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, at::detail::Array<char*, 2> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791422528,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410791422531,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791422534,"dur":153},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791422688,"dur":156},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4>)","pid":0,"tid":7,"ts":1685410791422845,"dur":84},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::log_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::log_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791422930,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410791422934,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791422938,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791422942,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::exp_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791422948,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::CUDAFunctor_add<float> >(at::TensorIteratorBase&, at::native::CUDAFunctor_add<float> const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791422951,"dur":6},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > >(at::TensorIteratorBase&, at::native::BinaryFunctor<float, float, float, at::native::binary_internal::MulFunctor<float> > const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1685410791422958,"dur":13},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::ctc_loss_backward_collect_nonblank_gpu_kernel<float, long>(float*, float const*, long, float const*, float const*, float const*, long const*, long const*, long const*, float const*, long, long, long, long, long, long, long, long, long, long, long, long, long const*, long, long, bool)","pid":0,"tid":7,"ts":1685410791422973,"dur":357},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::ctc_loss_zero_padded_gradients<float>(float*, long const*, long, long, long, long, long, long)","pid":0,"tid":7,"ts":1685410791423331,"dur":29},{"ph":"X","cat":"kernel","name":"void (anonymous namespace)::softmax_warp_backward<float, float, float, 5, true, false>(float*, float const*, float const*, int, int, int, bool const*)","pid":0,"tid":7,"ts":1685410791423362,"dur":23}]