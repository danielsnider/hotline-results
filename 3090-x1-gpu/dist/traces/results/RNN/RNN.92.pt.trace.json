[{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":14570,"tid":14570,"ts":1685410791410350,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14570,"ts":1685410791410352,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":14570,"tid":14570,"ts":1685410791410358,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::sum","pid":14570,"tid":14570,"ts":1685410791410363,"dur":27},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14570,"ts":1685410791410372,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410380,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":14570,"tid":14570,"ts":1685410791410395,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":14570,"tid":14570,"ts":1685410791410528,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410530,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":14570,"tid":14570,"ts":1685410791410533,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410541,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":14570,"tid":14570,"ts":1685410791410564,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14570,"ts":1685410791410582,"dur":22},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410592,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::batch_norm","pid":14570,"tid":14570,"ts":1685410791410619,"dur":96},{"ph":"X","cat":"cpu_op","name":"aten::_batch_norm_impl_index","pid":14570,"tid":14570,"ts":1685410791410620,"dur":95},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410621,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::native_batch_norm","pid":14570,"tid":14570,"ts":1685410791410628,"dur":86},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":14570,"tid":14570,"ts":1685410791410637,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":14570,"tid":14570,"ts":1685410791410638,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410645,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410650,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410656,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":14570,"tid":14570,"ts":1685410791410661,"dur":22},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14570,"ts":1685410791410662,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":14570,"tid":14570,"ts":1685410791410666,"dur":16},{"ph":"X","cat":"cpu_op","name":"aten::fill_","pid":14570,"tid":14570,"ts":1685410791410668,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410672,"dur":7},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410684,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410698,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410706,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::linear","pid":14570,"tid":14570,"ts":1685410791410735,"dur":82},{"ph":"X","cat":"cpu_op","name":"aten::t","pid":14570,"tid":14570,"ts":1685410791410739,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":14570,"tid":14570,"ts":1685410791410743,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":14570,"tid":14570,"ts":1685410791410744,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::matmul","pid":14570,"tid":14570,"ts":1685410791410750,"dur":66},{"ph":"X","cat":"cpu_op","name":"aten::mm","pid":14570,"tid":14570,"ts":1685410791410754,"dur":61},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":14570,"tid":14570,"ts":1685410791410795,"dur":2},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14570,"ts":1685410791410802,"dur":11},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<128, 4, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4>)","pid":0,"tid":7,"ts":1685410791416419,"dur":582},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctorOnSelf_add<long>, at::detail::Array<char*, 2> >(int, at::native::CUDAFunctorOnSelf_add<long>, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1685410791417002,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<int>, at::detail::Array<char*, 1> >(int, at::native::FillFunctor<int>, at::detail::Array<char*, 1>)","pid":0,"tid":7,"ts":1685410791417006,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::batch_norm_collect_statistics_channels_last_kernel<at::native::Var, float, float, 4>(float const*, float*, float*, float volatile*, int*, int, int, float)","pid":0,"tid":7,"ts":1685410791417009,"dur":219},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::unrolled_elementwise_kernel_for_multi_outputs<3, at::native::(anonymous namespace)::batch_norm_update_stats_and_invert(at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, double, double, long)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float, float)#1}, at::detail::Array<char*, 7>, TrivialOffsetCalculator<4, unsigned int>, at::detail::Array<3, unsigned int> >(int, at::native::(anonymous namespace)::batch_norm_update_stats_and_invert(at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, double, double, long)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float, float, float)#1}, at::detail::Array<char*, 7>, TrivialOffsetCalculator<4, unsigned int>, at::detail::Array<3, unsigned int>)","pid":0,"tid":7,"ts":1685410791417229,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::batch_norm_transform_input_channels_last_kernel<float, float, float, 4>(float const*, float const*, float const*, float const*, float const*, float const*, float*, int, int, bool)","pid":0,"tid":7,"ts":1685410791417232,"dur":388},{"ph":"X","cat":"kernel","name":"ampere_sgemm_32x32_sliced1x4_tn","pid":0,"tid":7,"ts":1685410791417622,"dur":227}]