[{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792363799,"dur":20},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792363801,"dur":17},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14756,"ts":1685410792363802,"dur":15},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792363809,"dur":6},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792363825,"dur":16},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792363827,"dur":13},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14756,"ts":1685410792363828,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792363832,"dur":4},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: MaskedFillBackward0","pid":14570,"tid":14756,"ts":1685410792363845,"dur":45},{"ph":"X","cat":"cpu_op","name":"MaskedFillBackward0","pid":14570,"tid":14756,"ts":1685410792363847,"dur":37},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill","pid":14570,"tid":14756,"ts":1685410792363848,"dur":36},{"ph":"X","cat":"cpu_op","name":"aten::clone","pid":14570,"tid":14756,"ts":1685410792363849,"dur":23},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":14570,"tid":14756,"ts":1685410792363850,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410792363851,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":14570,"tid":14756,"ts":1685410792363857,"dur":15},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":14570,"tid":14756,"ts":1685410792363860,"dur":10},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill_","pid":14570,"tid":14756,"ts":1685410792363873,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792363877,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792414811,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792414815,"dur":2},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoD (Device -> Device)","pid":0,"tid":7,"ts":1685410792414819,"dur":673},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792415494,"dur":752}]