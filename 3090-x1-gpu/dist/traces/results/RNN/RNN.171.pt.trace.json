[{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792369964,"dur":24},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792369967,"dur":20},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14756,"ts":1685410792369969,"dur":16},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792369977,"dur":6},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792369993,"dur":17},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":14570,"tid":14756,"ts":1685410792369995,"dur":14},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":14570,"tid":14756,"ts":1685410792369997,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792370001,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: MaskedFillBackward0","pid":14570,"tid":14756,"ts":1685410792370014,"dur":49},{"ph":"X","cat":"cpu_op","name":"MaskedFillBackward0","pid":14570,"tid":14756,"ts":1685410792370016,"dur":40},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill","pid":14570,"tid":14756,"ts":1685410792370018,"dur":38},{"ph":"X","cat":"cpu_op","name":"aten::clone","pid":14570,"tid":14756,"ts":1685410792370020,"dur":23},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":14570,"tid":14756,"ts":1685410792370020,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410792370021,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":14570,"tid":14756,"ts":1685410792370028,"dur":15},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":14570,"tid":14756,"ts":1685410792370031,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill_","pid":14570,"tid":14756,"ts":1685410792370044,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792370048,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: HardtanhBackward0","pid":14570,"tid":14756,"ts":1685410792370068,"dur":27},{"ph":"X","cat":"cpu_op","name":"HardtanhBackward0","pid":14570,"tid":14756,"ts":1685410792370069,"dur":20},{"ph":"X","cat":"cpu_op","name":"aten::hardtanh_backward","pid":14570,"tid":14756,"ts":1685410792370071,"dur":18},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":14570,"tid":14756,"ts":1685410792370074,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":14570,"tid":14756,"ts":1685410792370081,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792513762,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792513768,"dur":3},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoD (Device -> Device)","pid":0,"tid":7,"ts":1685410792513772,"dur":1310},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792515083,"dur":1475},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::hardtanh_backward_kernel(at::TensorIterator&, c10::Scalar const&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::hardtanh_backward_kernel(at::TensorIterator&, c10::Scalar const&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1685410792516560,"dur":1950}]