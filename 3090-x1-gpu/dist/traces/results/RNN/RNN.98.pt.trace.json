[{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1678056029617534,"dur":23},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1678056029617536,"dur":20},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":7,"tid":193,"ts":1678056029617538,"dur":16},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1678056029617545,"dur":6},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1678056029617562,"dur":20},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1678056029617564,"dur":16},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":7,"tid":193,"ts":1678056029617566,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1678056029617572,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: MaskedFillBackward0","pid":7,"tid":193,"ts":1678056029617586,"dur":50},{"ph":"X","cat":"cpu_op","name":"MaskedFillBackward0","pid":7,"tid":193,"ts":1678056029617587,"dur":43},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill","pid":7,"tid":193,"ts":1678056029617589,"dur":40},{"ph":"X","cat":"cpu_op","name":"aten::clone","pid":7,"tid":193,"ts":1678056029617590,"dur":26},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":7,"tid":193,"ts":1678056029617591,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1678056029617592,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":7,"tid":193,"ts":1678056029617599,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":7,"tid":193,"ts":1678056029617602,"dur":11},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill_","pid":7,"tid":193,"ts":1678056029617617,"dur":12},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1678056029617622,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: HardtanhBackward0","pid":7,"tid":193,"ts":1678056029617641,"dur":28},{"ph":"X","cat":"cpu_op","name":"HardtanhBackward0","pid":7,"tid":193,"ts":1678056029617642,"dur":22},{"ph":"X","cat":"cpu_op","name":"aten::hardtanh_backward","pid":7,"tid":193,"ts":1678056029617644,"dur":20},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1678056029617648,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1678056029617656,"dur":6},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1678056029754885,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1678056029754891,"dur":2},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoD (Device -> Device)","pid":0,"tid":7,"ts":1678056029754895,"dur":1310},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1678056029756206,"dur":1474},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::hardtanh_backward_kernel(at::TensorIterator&, c10::Scalar const&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::hardtanh_backward_kernel(at::TensorIterator&, c10::Scalar const&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float, float)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1678056029757681,"dur":1951}]