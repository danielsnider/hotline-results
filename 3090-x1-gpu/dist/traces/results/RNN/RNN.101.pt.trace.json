[{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1677891894792490,"dur":22},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1677891894792492,"dur":19},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":7,"tid":193,"ts":1677891894792494,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891894792500,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1677891894792517,"dur":16},{"ph":"X","cat":"cpu_op","name":"torch::autograd::AccumulateGrad","pid":7,"tid":193,"ts":1677891894792519,"dur":13},{"ph":"X","cat":"cpu_op","name":"aten::add_","pid":7,"tid":193,"ts":1677891894792520,"dur":11},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891894792524,"dur":5},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: MaskedFillBackward0","pid":7,"tid":193,"ts":1677891894792537,"dur":45},{"ph":"X","cat":"cpu_op","name":"MaskedFillBackward0","pid":7,"tid":193,"ts":1677891894792539,"dur":37},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill","pid":7,"tid":193,"ts":1677891894792540,"dur":36},{"ph":"X","cat":"cpu_op","name":"aten::clone","pid":7,"tid":193,"ts":1677891894792542,"dur":22},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":7,"tid":193,"ts":1677891894792542,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891894792543,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":7,"tid":193,"ts":1677891894792550,"dur":14},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":7,"tid":193,"ts":1677891894792552,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::masked_fill_","pid":7,"tid":193,"ts":1677891894792565,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891894792569,"dur":4},{"ph":"X","cat":"cpu_op","name":"autograd::engine::evaluate_function: ConvolutionBackward0","pid":7,"tid":193,"ts":1677891894792587,"dur":165},{"ph":"X","cat":"cpu_op","name":"ConvolutionBackward0","pid":7,"tid":193,"ts":1677891894792589,"dur":154},{"ph":"X","cat":"cpu_op","name":"aten::convolution_backward","pid":7,"tid":193,"ts":1677891894792591,"dur":151},{"ph":"X","cat":"cpu_op","name":"aten::contiguous","pid":7,"tid":193,"ts":1677891894792598,"dur":23},{"ph":"X","cat":"cpu_op","name":"aten::clone","pid":7,"tid":193,"ts":1677891894792599,"dur":22},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":7,"tid":193,"ts":1677891894792600,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891894792601,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::copy_","pid":7,"tid":193,"ts":1677891894792607,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891894792613,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891894792623,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamIsCapturing","pid":7,"tid":193,"ts":1677891894792632,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamGetPriority","pid":7,"tid":193,"ts":1677891894792633,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaDeviceGetStreamPriorityRange","pid":7,"tid":193,"ts":1677891894792634,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":7,"tid":193,"ts":1677891894792639,"dur":3},{"ph":"X","cat":"cuda_runtime","name":"cudaMemsetAsync","pid":7,"tid":193,"ts":1677891894792681,"dur":8},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891894792691,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::sum","pid":7,"tid":193,"ts":1677891894792703,"dur":37},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":7,"tid":193,"ts":1677891894792709,"dur":2},{"ph":"X","cat":"cuda_runtime","name":"cudaMemsetAsync","pid":7,"tid":193,"ts":1677891894792719,"dur":10},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":7,"tid":193,"ts":1677891894792731,"dur":5},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1677891894947201,"dur":3},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3> >(int, at::native::CUDAFunctor_add<float>, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1677891894947205,"dur":2},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoD (Device -> Device)","pid":0,"tid":7,"ts":1677891894947209,"dur":1313},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3> >(int, at::native::(anonymous namespace)::masked_fill_kernel<bool>(at::TensorIterator&, c10::Scalar const&)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float, bool)#1}, at::detail::Array<char*, 3>)","pid":0,"tid":7,"ts":1677891894948524,"dur":1469},{"ph":"X","cat":"kernel","name":"void at::native::elementwise_kernel<128, 2, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#2}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677891894949995,"dur":283},{"ph":"X","cat":"gpu_memset","name":"Memset (Device)","pid":0,"tid":7,"ts":1677891894950279,"dur":2},{"ph":"X","cat":"kernel","name":"void wgrad_alg0_engine<float, 512, 6, 5, 3, 3, 3, false, 512>(int, int, int, float const*, int, float*, float const*, kernel_grad_params, unsigned long long, int, float, int, int, int, int)","pid":0,"tid":7,"ts":1677891894950283,"dur":11614},{"ph":"X","cat":"gpu_memset","name":"Memset (Device)","pid":0,"tid":7,"ts":1677891894961899,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::sum_functor<float, float, float>::operator()(at::TensorIterator&)::{lambda(float, float)#1}>, unsigned int, float, 4>)","pid":0,"tid":7,"ts":1677891894961902,"dur":743}]