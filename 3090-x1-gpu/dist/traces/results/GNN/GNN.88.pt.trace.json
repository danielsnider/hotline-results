[{"ph":"X","cat":"cpu_op","name":"aten::layer_norm","pid":8,"tid":8,"ts":1677892474440621,"dur":41},{"ph":"X","cat":"cpu_op","name":"aten::native_layer_norm","pid":8,"tid":8,"ts":1677892474440622,"dur":39},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440629,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440635,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440640,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474440647,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1677892474440656,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1677892474440658,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::relu","pid":8,"tid":8,"ts":1677892474440668,"dur":23},{"ph":"X","cat":"cpu_op","name":"aten::clamp_min","pid":8,"tid":8,"ts":1677892474440671,"dur":16},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474440679,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::dropout","pid":8,"tid":8,"ts":1677892474440701,"dur":34},{"ph":"X","cat":"cpu_op","name":"aten::native_dropout","pid":8,"tid":8,"ts":1677892474440703,"dur":31},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1677892474440707,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1677892474440708,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1677892474440714,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1677892474440714,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamIsCapturing","pid":8,"tid":8,"ts":1677892474440722,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474440725,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474440866,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440867,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474440870,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440878,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474440982,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440982,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474440984,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474440990,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474441082,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474441083,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474441085,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474441090,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1677892474441115,"dur":40},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474441121,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1677892474441124,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1677892474441126,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474441140,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1677892474441166,"dur":24},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474441169,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1677892474441171,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1677892474441172,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474441180,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1677892474441200,"dur":1789},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1677892474441201,"dur":1760},{"ph":"X","cat":"cpu_op","name":"aten::cumsum","pid":8,"tid":8,"ts":1677892474441205,"dur":37},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":8,"tid":8,"ts":1677892474441210,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474441221,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474441228,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474441229,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474441229,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaDeviceGetAttribute","pid":8,"tid":8,"ts":1677892474441231,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474441233,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474441238,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474441239,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::select","pid":8,"tid":8,"ts":1677892474441243,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474441244,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1677892474441246,"dur":1638},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1677892474441247,"dur":1637},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1677892474441249,"dur":1631},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1677892474442881,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::ge","pid":8,"tid":8,"ts":1677892474442886,"dur":19},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474442897,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::all","pid":8,"tid":8,"ts":1677892474442907,"dur":18},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474442911,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474442918,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1677892474442926,"dur":18},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1677892474442927,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1677892474442929,"dur":12},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1677892474442942,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474442946,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474442953,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::index_select","pid":8,"tid":8,"ts":1677892474442962,"dur":26},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474442967,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":8,"tid":8,"ts":1677892474442973,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474442980,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::cat","pid":8,"tid":8,"ts":1677892474443006,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474443017,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::linear","pid":8,"tid":8,"ts":1677892474443039,"dur":61},{"ph":"X","cat":"cpu_op","name":"aten::t","pid":8,"tid":8,"ts":1677892474443040,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":8,"tid":8,"ts":1677892474443043,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474443044,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::addmm","pid":8,"tid":8,"ts":1677892474443048,"dur":52},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474443061,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474443077,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474443081,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474443088,"dur":7},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::vectorized_layer_norm_kernel<float, float>(int, float, float const*, float const*, float const*, float*, float*, float*)","pid":0,"tid":7,"ts":1677892474441461,"dur":25},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677892474441488,"dur":17},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::fused_dropout_kernel_vec<float, float, unsigned int, 1, 4, bool>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<bool, unsigned int>, unsigned int, float, at::PhiloxCudaState)","pid":0,"tid":7,"ts":1677892474441506,"dur":21},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677892474441529,"dur":666},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677892474442196,"dur":666},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanInitKernel<at_cuda_detail::cub::ScanTileState<long, true> >(at_cuda_detail::cub::ScanTileState<long, true>, int)","pid":0,"tid":7,"ts":1677892474442864,"dur":2},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanKernel<at_cuda_detail::cub::DeviceScanPolicy<long>::Policy600, long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, std::plus<long>, at_cuda_detail::cub::NullType, int>(long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, int, std::plus<long>, at_cuda_detail::cub::NullType, int)","pid":0,"tid":7,"ts":1677892474442867,"dur":4},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1677892474442875,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2> >(int, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677892474442905,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4>)","pid":0,"tid":7,"ts":1677892474442925,"dur":5},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1677892474442937,"dur":1},{"ph":"X","cat":"kernel","name":"void compute_cuda_kernel<long>(long*, long*, long*, long, long)","pid":0,"tid":7,"ts":1677892474442960,"dur":4},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::indexSelectLargeIndex<float, long, unsigned int, 2, 2, -2, true>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<long, unsigned int>, int, int, unsigned int, unsigned int, long)","pid":0,"tid":7,"ts":1677892474442987,"dur":947},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::CatArrayBatchedCopy<float, unsigned int, 2, 128, 1>(float*, at::native::(anonymous namespace)::CatArrInputTensorMetadata<float, unsigned int, 128, 1>, at::native::(anonymous namespace)::TensorSizeStride<unsigned int, 4u>, int, unsigned int)","pid":0,"tid":7,"ts":1677892474443935,"dur":3543},{"ph":"X","cat":"kernel","name":"ampere_sgemm_128x64_tn","pid":0,"tid":7,"ts":1677892474447480,"dur":8986}]