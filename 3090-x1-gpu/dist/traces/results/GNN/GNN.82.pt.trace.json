[{"ph":"X","cat":"cpu_op","name":"aten::layer_norm","pid":8,"tid":8,"ts":1677892474410869,"dur":41},{"ph":"X","cat":"cpu_op","name":"aten::native_layer_norm","pid":8,"tid":8,"ts":1677892474410870,"dur":40},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474410877,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474410883,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474410888,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474410896,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1677892474410905,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1677892474410907,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::relu","pid":8,"tid":8,"ts":1677892474410917,"dur":22},{"ph":"X","cat":"cpu_op","name":"aten::clamp_min","pid":8,"tid":8,"ts":1677892474410919,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474410928,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::dropout","pid":8,"tid":8,"ts":1677892474410949,"dur":34},{"ph":"X","cat":"cpu_op","name":"aten::native_dropout","pid":8,"tid":8,"ts":1677892474410951,"dur":31},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1677892474410955,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1677892474410956,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1677892474410962,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1677892474410962,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamIsCapturing","pid":8,"tid":8,"ts":1677892474410970,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474410973,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474411115,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474411116,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474411119,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474411127,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474411232,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474411232,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474411234,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474411241,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474411333,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474411334,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474411335,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474411341,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1677892474411366,"dur":40},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474411372,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1677892474411375,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1677892474411377,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474411391,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1677892474411417,"dur":23},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474411420,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1677892474411421,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1677892474411423,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474411431,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1677892474411450,"dur":1798},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1677892474411451,"dur":1770},{"ph":"X","cat":"cpu_op","name":"aten::cumsum","pid":8,"tid":8,"ts":1677892474411454,"dur":36},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":8,"tid":8,"ts":1677892474411459,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474411470,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474411477,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474411477,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474411478,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaDeviceGetAttribute","pid":8,"tid":8,"ts":1677892474411480,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474411481,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474411486,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474411487,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::select","pid":8,"tid":8,"ts":1677892474411491,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474411492,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1677892474411494,"dur":1651},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1677892474411495,"dur":1650},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1677892474411497,"dur":1644},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1677892474413142,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::ge","pid":8,"tid":8,"ts":1677892474413147,"dur":19},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474413158,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::all","pid":8,"tid":8,"ts":1677892474413167,"dur":19},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474413172,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474413179,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1677892474413187,"dur":18},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1677892474413188,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1677892474413189,"dur":12},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1677892474413203,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474413207,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474413213,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::index_select","pid":8,"tid":8,"ts":1677892474413222,"dur":25},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474413227,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":8,"tid":8,"ts":1677892474413233,"dur":3},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474413239,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::cat","pid":8,"tid":8,"ts":1677892474413268,"dur":24},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474413281,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::linear","pid":8,"tid":8,"ts":1677892474413307,"dur":74},{"ph":"X","cat":"cpu_op","name":"aten::t","pid":8,"tid":8,"ts":1677892474413309,"dur":9},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":8,"tid":8,"ts":1677892474413313,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474413314,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::addmm","pid":8,"tid":8,"ts":1677892474413319,"dur":62},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474413334,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474413353,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474413358,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474413367,"dur":8},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::vectorized_layer_norm_kernel<float, float>(int, float, float const*, float const*, float const*, float*, float*, float*)","pid":0,"tid":7,"ts":1677892474411723,"dur":25},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677892474411750,"dur":17},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::fused_dropout_kernel_vec<float, float, unsigned int, 1, 4, bool>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<bool, unsigned int>, unsigned int, float, at::PhiloxCudaState)","pid":0,"tid":7,"ts":1677892474411769,"dur":22},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677892474411791,"dur":666},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677892474412459,"dur":666},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanInitKernel<at_cuda_detail::cub::ScanTileState<long, true> >(at_cuda_detail::cub::ScanTileState<long, true>, int)","pid":0,"tid":7,"ts":1677892474413127,"dur":2},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanKernel<at_cuda_detail::cub::DeviceScanPolicy<long>::Policy600, long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, std::plus<long>, at_cuda_detail::cub::NullType, int>(long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, int, std::plus<long>, at_cuda_detail::cub::NullType, int)","pid":0,"tid":7,"ts":1677892474413130,"dur":4},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1677892474413136,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2> >(int, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677892474413165,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4>)","pid":0,"tid":7,"ts":1677892474413186,"dur":5},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1677892474413197,"dur":1},{"ph":"X","cat":"kernel","name":"void compute_cuda_kernel<long>(long*, long*, long*, long, long)","pid":0,"tid":7,"ts":1677892474413220,"dur":4},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::indexSelectLargeIndex<float, long, unsigned int, 2, 2, -2, true>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<long, unsigned int>, int, int, unsigned int, unsigned int, long)","pid":0,"tid":7,"ts":1677892474413246,"dur":946},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::CatArrayBatchedCopy<float, unsigned int, 2, 128, 1>(float*, at::native::(anonymous namespace)::CatArrInputTensorMetadata<float, unsigned int, 128, 1>, at::native::(anonymous namespace)::TensorSizeStride<unsigned int, 4u>, int, unsigned int)","pid":0,"tid":7,"ts":1677892474414194,"dur":3538},{"ph":"X","cat":"kernel","name":"ampere_sgemm_128x64_tn","pid":0,"tid":7,"ts":1677892474417733,"dur":9204}]