[{"ph":"X","cat":"cpu_op","name":"aten::layer_norm","pid":8,"tid":8,"ts":1678056532210574,"dur":43},{"ph":"X","cat":"cpu_op","name":"aten::native_layer_norm","pid":8,"tid":8,"ts":1678056532210575,"dur":41},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210581,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210587,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210594,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532210602,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1678056532210611,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1678056532210613,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::relu","pid":8,"tid":8,"ts":1678056532210622,"dur":25},{"ph":"X","cat":"cpu_op","name":"aten::clamp_min","pid":8,"tid":8,"ts":1678056532210625,"dur":18},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532210635,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::dropout","pid":8,"tid":8,"ts":1678056532210657,"dur":35},{"ph":"X","cat":"cpu_op","name":"aten::native_dropout","pid":8,"tid":8,"ts":1678056532210658,"dur":33},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1678056532210662,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1678056532210663,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1678056532210670,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1678056532210671,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamIsCapturing","pid":8,"tid":8,"ts":1678056532210678,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532210682,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1678056532210826,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210827,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1678056532210830,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210838,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1678056532210943,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210944,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1678056532210946,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532210952,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1678056532211046,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532211047,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1678056532211049,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532211055,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1678056532211081,"dur":41},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532211087,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1678056532211090,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1678056532211092,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532211106,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1678056532211133,"dur":24},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532211136,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1678056532211138,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1678056532211139,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532211148,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1678056532211168,"dur":1643},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1678056532211169,"dur":1613},{"ph":"X","cat":"cpu_op","name":"aten::cumsum","pid":8,"tid":8,"ts":1678056532211172,"dur":38},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":8,"tid":8,"ts":1678056532211178,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532211189,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532211196,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532211197,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1678056532211197,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaDeviceGetAttribute","pid":8,"tid":8,"ts":1678056532211200,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532211201,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532211206,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532211207,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::select","pid":8,"tid":8,"ts":1678056532211211,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532211212,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1678056532211215,"dur":1488},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1678056532211216,"dur":1486},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1678056532211218,"dur":1481},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1678056532212699,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::ge","pid":8,"tid":8,"ts":1678056532212704,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532212716,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::all","pid":8,"tid":8,"ts":1678056532212725,"dur":20},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532212730,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532212738,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1678056532212747,"dur":18},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1678056532212747,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1678056532212749,"dur":12},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1678056532212762,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532212767,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532212774,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::index_select","pid":8,"tid":8,"ts":1678056532212784,"dur":26},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532212788,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":8,"tid":8,"ts":1678056532212795,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532212801,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::cat","pid":8,"tid":8,"ts":1678056532212827,"dur":23},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532212840,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::linear","pid":8,"tid":8,"ts":1678056532212862,"dur":69},{"ph":"X","cat":"cpu_op","name":"aten::t","pid":8,"tid":8,"ts":1678056532212863,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":8,"tid":8,"ts":1678056532212866,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532212867,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::addmm","pid":8,"tid":8,"ts":1678056532212871,"dur":59},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532212885,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1678056532212901,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1678056532212905,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532212912,"dur":7},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::vectorized_layer_norm_kernel<float, float>(int, float, float const*, float const*, float const*, float*, float*, float*)","pid":0,"tid":7,"ts":1678056532211309,"dur":24},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1678056532211334,"dur":17},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::fused_dropout_kernel_vec<float, float, unsigned int, 1, 4, bool>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<bool, unsigned int>, unsigned int, float, at::PhiloxCudaState)","pid":0,"tid":7,"ts":1678056532211352,"dur":21},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1678056532211375,"dur":653},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1678056532212029,"dur":653},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanInitKernel<at_cuda_detail::cub::ScanTileState<long, true> >(at_cuda_detail::cub::ScanTileState<long, true>, int)","pid":0,"tid":7,"ts":1678056532212683,"dur":2},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanKernel<at_cuda_detail::cub::DeviceScanPolicy<long>::Policy600, long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, std::plus<long>, at_cuda_detail::cub::NullType, int>(long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, int, std::plus<long>, at_cuda_detail::cub::NullType, int)","pid":0,"tid":7,"ts":1678056532212686,"dur":4},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1678056532212694,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2> >(int, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1678056532212724,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4>)","pid":0,"tid":7,"ts":1678056532212745,"dur":5},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1678056532212757,"dur":1},{"ph":"X","cat":"kernel","name":"void compute_cuda_kernel<long>(long*, long*, long*, long, long)","pid":0,"tid":7,"ts":1678056532212781,"dur":4},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::indexSelectLargeIndex<float, long, unsigned int, 2, 2, -2, true>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<long, unsigned int>, int, int, unsigned int, unsigned int, long)","pid":0,"tid":7,"ts":1678056532212809,"dur":896},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::CatArrayBatchedCopy<float, unsigned int, 2, 128, 1>(float*, at::native::(anonymous namespace)::CatArrInputTensorMetadata<float, unsigned int, 128, 1>, at::native::(anonymous namespace)::TensorSizeStride<unsigned int, 4u>, int, unsigned int)","pid":0,"tid":7,"ts":1678056532213706,"dur":3553},{"ph":"X","cat":"kernel","name":"ampere_sgemm_128x64_tn","pid":0,"tid":7,"ts":1678056532217261,"dur":9085}]