[{"ph":"X","cat":"cpu_op","name":"aten::layer_norm","pid":8,"tid":8,"ts":1677892474352541,"dur":40},{"ph":"X","cat":"cpu_op","name":"aten::native_layer_norm","pid":8,"tid":8,"ts":1677892474352542,"dur":39},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352549,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352555,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352559,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474352567,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1677892474352576,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1677892474352578,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::relu","pid":8,"tid":8,"ts":1677892474352587,"dur":24},{"ph":"X","cat":"cpu_op","name":"aten::clamp_min","pid":8,"tid":8,"ts":1677892474352590,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474352599,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::dropout","pid":8,"tid":8,"ts":1677892474352621,"dur":34},{"ph":"X","cat":"cpu_op","name":"aten::native_dropout","pid":8,"tid":8,"ts":1677892474352622,"dur":33},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1677892474352626,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1677892474352628,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1677892474352634,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1677892474352635,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamIsCapturing","pid":8,"tid":8,"ts":1677892474352643,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474352646,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474352793,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352794,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474352798,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352805,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474352909,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352910,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474352912,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474352918,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1677892474353011,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474353012,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1677892474353014,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474353020,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1677892474353046,"dur":42},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474353054,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1677892474353056,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1677892474353059,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474353072,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1677892474353099,"dur":24},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474353102,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1677892474353104,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1677892474353105,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474353114,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1677892474353133,"dur":1639},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1677892474353134,"dur":1611},{"ph":"X","cat":"cpu_op","name":"aten::cumsum","pid":8,"tid":8,"ts":1677892474353137,"dur":38},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":8,"tid":8,"ts":1677892474353143,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474353154,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474353161,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474353162,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474353162,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaDeviceGetAttribute","pid":8,"tid":8,"ts":1677892474353165,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474353166,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474353171,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1677892474353172,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::select","pid":8,"tid":8,"ts":1677892474353176,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474353177,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1677892474353180,"dur":1489},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1677892474353180,"dur":1489},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1677892474353182,"dur":1483},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1677892474354666,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::ge","pid":8,"tid":8,"ts":1677892474354670,"dur":19},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474354682,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::all","pid":8,"tid":8,"ts":1677892474354691,"dur":19},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474354696,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474354703,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1677892474354711,"dur":17},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1677892474354711,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1677892474354713,"dur":12},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1677892474354726,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474354730,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474354737,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::index_select","pid":8,"tid":8,"ts":1677892474354746,"dur":25},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474354750,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":8,"tid":8,"ts":1677892474354756,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474354763,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::cat","pid":8,"tid":8,"ts":1677892474354788,"dur":21},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474354800,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::linear","pid":8,"tid":8,"ts":1677892474354822,"dur":64},{"ph":"X","cat":"cpu_op","name":"aten::t","pid":8,"tid":8,"ts":1677892474354824,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":8,"tid":8,"ts":1677892474354827,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1677892474354828,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::addmm","pid":8,"tid":8,"ts":1677892474354832,"dur":53},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1677892474354847,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474354863,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1677892474354867,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1677892474354874,"dur":7},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::vectorized_layer_norm_kernel<float, float>(int, float, float const*, float const*, float const*, float*, float*, float*)","pid":0,"tid":7,"ts":1677892474353289,"dur":23},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677892474353313,"dur":17},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::fused_dropout_kernel_vec<float, float, unsigned int, 1, 4, bool>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<bool, unsigned int>, unsigned int, float, at::PhiloxCudaState)","pid":0,"tid":7,"ts":1677892474353331,"dur":20},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677892474353353,"dur":646},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1677892474354000,"dur":647},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanInitKernel<at_cuda_detail::cub::ScanTileState<long, true> >(at_cuda_detail::cub::ScanTileState<long, true>, int)","pid":0,"tid":7,"ts":1677892474354649,"dur":2},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanKernel<at_cuda_detail::cub::DeviceScanPolicy<long>::Policy600, long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, std::plus<long>, at_cuda_detail::cub::NullType, int>(long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, int, std::plus<long>, at_cuda_detail::cub::NullType, int)","pid":0,"tid":7,"ts":1677892474354652,"dur":3},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1677892474354660,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2> >(int, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1677892474354689,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4>)","pid":0,"tid":7,"ts":1677892474354710,"dur":4},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1677892474354721,"dur":1},{"ph":"X","cat":"kernel","name":"void compute_cuda_kernel<long>(long*, long*, long*, long, long)","pid":0,"tid":7,"ts":1677892474354744,"dur":4},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::indexSelectLargeIndex<float, long, unsigned int, 2, 2, -2, true>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<long, unsigned int>, int, int, unsigned int, unsigned int, long)","pid":0,"tid":7,"ts":1677892474354770,"dur":874},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::CatArrayBatchedCopy<float, unsigned int, 2, 128, 1>(float*, at::native::(anonymous namespace)::CatArrInputTensorMetadata<float, unsigned int, 128, 1>, at::native::(anonymous namespace)::TensorSizeStride<unsigned int, 4u>, int, unsigned int)","pid":0,"tid":7,"ts":1677892474355646,"dur":3542},{"ph":"X","cat":"kernel","name":"ampere_sgemm_128x64_tn","pid":0,"tid":7,"ts":1677892474359188,"dur":8662}]