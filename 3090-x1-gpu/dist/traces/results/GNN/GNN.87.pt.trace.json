[{"ph":"X","cat":"cpu_op","name":"aten::layer_norm","pid":8,"tid":8,"ts":1678056532298546,"dur":43},{"ph":"X","cat":"cpu_op","name":"aten::native_layer_norm","pid":8,"tid":8,"ts":1678056532298547,"dur":42},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298555,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298561,"dur":4},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298565,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532298574,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1678056532298584,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::view","pid":8,"tid":8,"ts":1678056532298586,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::relu","pid":8,"tid":8,"ts":1678056532298595,"dur":24},{"ph":"X","cat":"cpu_op","name":"aten::clamp_min","pid":8,"tid":8,"ts":1678056532298598,"dur":18},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532298608,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::dropout","pid":8,"tid":8,"ts":1678056532298630,"dur":34},{"ph":"X","cat":"cpu_op","name":"aten::native_dropout","pid":8,"tid":8,"ts":1678056532298631,"dur":32},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1678056532298635,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1678056532298636,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_like","pid":8,"tid":8,"ts":1678056532298642,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty_strided","pid":8,"tid":8,"ts":1678056532298643,"dur":4},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamIsCapturing","pid":8,"tid":8,"ts":1678056532298650,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532298654,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1678056532298797,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298798,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1678056532298801,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298808,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1678056532298912,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298913,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1678056532298915,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532298921,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::zeros","pid":8,"tid":8,"ts":1678056532299012,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532299013,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::zero_","pid":8,"tid":8,"ts":1678056532299015,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532299020,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1678056532299045,"dur":41},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532299051,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1678056532299054,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1678056532299056,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532299070,"dur":12},{"ph":"X","cat":"cpu_op","name":"aten::index","pid":8,"tid":8,"ts":1678056532299096,"dur":25},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532299100,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::reshape","pid":8,"tid":8,"ts":1678056532299102,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::_reshape_alias","pid":8,"tid":8,"ts":1678056532299103,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532299111,"dur":7},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1678056532299131,"dur":1746},{"ph":"X","cat":"cpu_op","name":"aten::repeat_interleave","pid":8,"tid":8,"ts":1678056532299132,"dur":1717},{"ph":"X","cat":"cpu_op","name":"aten::cumsum","pid":8,"tid":8,"ts":1678056532299135,"dur":38},{"ph":"X","cat":"cpu_op","name":"aten::to","pid":8,"tid":8,"ts":1678056532299140,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532299152,"dur":6},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532299159,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532299159,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1678056532299160,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaDeviceGetAttribute","pid":8,"tid":8,"ts":1678056532299162,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532299164,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532299169,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaPeekAtLastError","pid":8,"tid":8,"ts":1678056532299169,"dur":0},{"ph":"X","cat":"cpu_op","name":"aten::select","pid":8,"tid":8,"ts":1678056532299174,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532299175,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1678056532299177,"dur":1593},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1678056532299178,"dur":1591},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1678056532299180,"dur":1585},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1678056532300766,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::ge","pid":8,"tid":8,"ts":1678056532300771,"dur":20},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532300783,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::all","pid":8,"tid":8,"ts":1678056532300793,"dur":19},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532300798,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532300805,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::item","pid":8,"tid":8,"ts":1678056532300813,"dur":19},{"ph":"X","cat":"cpu_op","name":"aten::_local_scalar_dense","pid":8,"tid":8,"ts":1678056532300814,"dur":17},{"ph":"X","cat":"cuda_runtime","name":"cudaMemcpyAsync","pid":8,"tid":8,"ts":1678056532300816,"dur":13},{"ph":"X","cat":"cuda_runtime","name":"cudaStreamSynchronize","pid":8,"tid":8,"ts":1678056532300829,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532300834,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532300841,"dur":5},{"ph":"X","cat":"cpu_op","name":"aten::index_select","pid":8,"tid":8,"ts":1678056532300851,"dur":25},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532300855,"dur":3},{"ph":"X","cat":"cpu_op","name":"aten::resize_","pid":8,"tid":8,"ts":1678056532300862,"dur":3},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532300868,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::cat","pid":8,"tid":8,"ts":1678056532300894,"dur":21},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532300906,"dur":6},{"ph":"X","cat":"cpu_op","name":"aten::linear","pid":8,"tid":8,"ts":1678056532300927,"dur":63},{"ph":"X","cat":"cpu_op","name":"aten::t","pid":8,"tid":8,"ts":1678056532300928,"dur":8},{"ph":"X","cat":"cpu_op","name":"aten::transpose","pid":8,"tid":8,"ts":1678056532300932,"dur":2},{"ph":"X","cat":"cpu_op","name":"aten::as_strided","pid":8,"tid":8,"ts":1678056532300933,"dur":1},{"ph":"X","cat":"cpu_op","name":"aten::addmm","pid":8,"tid":8,"ts":1678056532300937,"dur":52},{"ph":"X","cat":"cpu_op","name":"aten::empty","pid":8,"tid":8,"ts":1678056532300950,"dur":5},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1678056532300966,"dur":1},{"ph":"X","cat":"cuda_runtime","name":"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags","pid":8,"tid":8,"ts":1678056532300970,"dur":0},{"ph":"X","cat":"cuda_runtime","name":"cudaLaunchKernel","pid":8,"tid":8,"ts":1678056532300977,"dur":7},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::vectorized_layer_norm_kernel<float, float>(int, float, float const*, float const*, float const*, float*, float*, float*)","pid":0,"tid":7,"ts":1678056532299343,"dur":25},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2> >(int, at::native::(anonymous namespace)::launch_clamp_scalar(at::TensorIteratorBase&, c10::Scalar, c10::Scalar, at::native::detail::ClampLimits)::{lambda()#1}::operator()() const::{lambda()#14}::operator()() const::{lambda(float)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1678056532299369,"dur":17},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::fused_dropout_kernel_vec<float, float, unsigned int, 1, 4, bool>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<bool, unsigned int>, unsigned int, float, at::PhiloxCudaState)","pid":0,"tid":7,"ts":1678056532299388,"dur":21},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1678056532299410,"dur":667},{"ph":"X","cat":"kernel","name":"void at::native::index_elementwise_kernel<128, 4, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_index_kernel<at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1}>(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>, at::native::index_kernel_impl<at::native::OpaqueType<4> >(at::TensorIteratorBase&, c10::ArrayRef<long>, c10::ArrayRef<long>)::{lambda(char*, char*, long)#1} const&)::{lambda(int)#1})","pid":0,"tid":7,"ts":1678056532300078,"dur":668},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanInitKernel<at_cuda_detail::cub::ScanTileState<long, true> >(at_cuda_detail::cub::ScanTileState<long, true>, int)","pid":0,"tid":7,"ts":1678056532300747,"dur":2},{"ph":"X","cat":"kernel","name":"void at_cuda_detail::cub::DeviceScanKernel<at_cuda_detail::cub::DeviceScanPolicy<long>::Policy600, long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, std::plus<long>, at_cuda_detail::cub::NullType, int>(long*, long*, at_cuda_detail::cub::ScanTileState<long, true>, int, std::plus<long>, at_cuda_detail::cub::NullType, int)","pid":0,"tid":7,"ts":1678056532300751,"dur":4},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1678056532300760,"dur":1},{"ph":"X","cat":"kernel","name":"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2> >(int, at::native::compare_scalar_kernel<long>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, long)::{lambda(long)#1}, at::detail::Array<char*, 2>)","pid":0,"tid":7,"ts":1678056532300791,"dur":2},{"ph":"X","cat":"kernel","name":"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4> >(at::native::ReduceOp<bool, at::native::func_wrapper_t<bool, at::native::and_kernel_cuda(at::TensorIterator&)::{lambda()#1}::operator()() const::{lambda()#24}::operator()() const::{lambda(bool, bool)#1}>, unsigned int, bool, 4>)","pid":0,"tid":7,"ts":1678056532300812,"dur":5},{"ph":"X","cat":"gpu_memcpy","name":"Memcpy DtoH (Device -> Pageable)","pid":0,"tid":7,"ts":1678056532300824,"dur":1},{"ph":"X","cat":"kernel","name":"void compute_cuda_kernel<long>(long*, long*, long*, long, long)","pid":0,"tid":7,"ts":1678056532300848,"dur":4},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::indexSelectLargeIndex<float, long, unsigned int, 2, 2, -2, true>(at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<float, unsigned int>, at::cuda::detail::TensorInfo<long, unsigned int>, int, int, unsigned int, unsigned int, long)","pid":0,"tid":7,"ts":1678056532300876,"dur":952},{"ph":"X","cat":"kernel","name":"void at::native::(anonymous namespace)::CatArrayBatchedCopy<float, unsigned int, 2, 128, 1>(float*, at::native::(anonymous namespace)::CatArrInputTensorMetadata<float, unsigned int, 128, 1>, at::native::(anonymous namespace)::TensorSizeStride<unsigned int, 4u>, int, unsigned int)","pid":0,"tid":7,"ts":1678056532301828,"dur":3537},{"ph":"X","cat":"kernel","name":"ampere_sgemm_128x64_tn","pid":0,"tid":7,"ts":1678056532305367,"dur":9179}]